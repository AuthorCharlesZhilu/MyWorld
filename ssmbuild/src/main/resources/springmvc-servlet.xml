<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:contex="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd"><!--springmvc配置文件-->
    <!--自动扫描包，让指定包下的注解生效，由IOC容器统一管理-->
    <contex:component-scan base-package="com.kang.controller"/>

    <!--Spring Mvc不处理静态资源 如.css   .js   .html   .mp3   .mp4,,所以要用资源过滤器-->
    <mvc:default-servlet-handler/>

    <!-- 支持mvc注解驱动
             在spring中一般采用@RequestMapping注解来完成映射关系
             要想使@RequestMapping注解生效必须向上下文注册DefaultAnnotationHandleMapping
             和一个AnnotationMethodhandlerAdapter实例这两个实例分别在类级别和方法级别处理
             而annotation-driven配置帮助我们自动完成上述两个实例的注入-->
    <!--相当于  添加 处理映射器  and  添加 处理器适配器-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/><!--json乱码问题处理，有这个就不用在每一条RequestMapping上写produces-->
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
                        <property name="failOnEmptyBeans" value="false"/>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--添加 视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="InternalResourceViewResolver">
        <!--前缀-->
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <!--后缀-->
        <property name="suffix" value=".jsp"/>
    </bean>


</beans>